{"/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-2/lista.ts":{"path":"/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-2/lista.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":28}},"3":{"start":{"line":13,"column":8},"end":{"line":13,"column":36}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":27}},"5":{"start":{"line":21,"column":8},"end":{"line":21,"column":28}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":36}},"7":{"start":{"line":26,"column":8},"end":{"line":26,"column":28}},"8":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"9":{"start":{"line":33,"column":21},"end":{"line":33,"column":32}},"10":{"start":{"line":33,"column":38},"end":{"line":33,"column":39}},"11":{"start":{"line":34,"column":12},"end":{"line":34,"column":50}},"12":{"start":{"line":36,"column":8},"end":{"line":36,"column":44}},"13":{"start":{"line":44,"column":25},"end":{"line":44,"column":27}},"14":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"15":{"start":{"line":45,"column":21},"end":{"line":45,"column":22}},"16":{"start":{"line":46,"column":12},"end":{"line":46,"column":43}},"17":{"start":{"line":48,"column":8},"end":{"line":52,"column":9}},"18":{"start":{"line":48,"column":21},"end":{"line":48,"column":22}},"19":{"start":{"line":48,"column":28},"end":{"line":48,"column":40}},"20":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"21":{"start":{"line":49,"column":25},"end":{"line":49,"column":26}},"22":{"start":{"line":50,"column":16},"end":{"line":50,"column":50}},"23":{"start":{"line":53,"column":8},"end":{"line":53,"column":37}},"24":{"start":{"line":61,"column":25},"end":{"line":61,"column":27}},"25":{"start":{"line":62,"column":8},"end":{"line":67,"column":9}},"26":{"start":{"line":62,"column":21},"end":{"line":62,"column":22}},"27":{"start":{"line":62,"column":28},"end":{"line":62,"column":29}},"28":{"start":{"line":63,"column":12},"end":{"line":66,"column":13}},"29":{"start":{"line":64,"column":16},"end":{"line":64,"column":47}},"30":{"start":{"line":65,"column":16},"end":{"line":65,"column":20}},"31":{"start":{"line":68,"column":8},"end":{"line":68,"column":37}},"32":{"start":{"line":75,"column":8},"end":{"line":75,"column":28}},"33":{"start":{"line":83,"column":25},"end":{"line":83,"column":27}},"34":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"35":{"start":{"line":84,"column":21},"end":{"line":84,"column":22}},"36":{"start":{"line":85,"column":12},"end":{"line":85,"column":52}},"37":{"start":{"line":87,"column":8},"end":{"line":87,"column":37}},"38":{"start":{"line":96,"column":8},"end":{"line":98,"column":9}},"39":{"start":{"line":96,"column":21},"end":{"line":96,"column":22}},"40":{"start":{"line":97,"column":12},"end":{"line":97,"column":61}},"41":{"start":{"line":99,"column":8},"end":{"line":99,"column":26}},"42":{"start":{"line":106,"column":25},"end":{"line":106,"column":27}},"43":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"44":{"start":{"line":107,"column":21},"end":{"line":107,"column":36}},"45":{"start":{"line":107,"column":42},"end":{"line":107,"column":43}},"46":{"start":{"line":108,"column":12},"end":{"line":108,"column":43}},"47":{"start":{"line":110,"column":8},"end":{"line":110,"column":37}},"48":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"49":{"start":{"line":117,"column":21},"end":{"line":117,"column":22}},"50":{"start":{"line":118,"column":12},"end":{"line":118,"column":39}},"51":{"start":{"line":122,"column":0},"end":{"line":122,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":23},"end":{"line":14,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":16},"end":{"line":18,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":21},"end":{"line":23,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":17},"end":{"line":27,"column":5}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":25},"end":{"line":37,"column":5}},"line":32},"5":{"name":"(anonymous_5)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":26},"end":{"line":54,"column":5}},"line":43},"6":{"name":"(anonymous_6)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":22},"end":{"line":69,"column":5}},"line":60},"7":{"name":"(anonymous_7)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":13},"end":{"line":76,"column":5}},"line":74},"8":{"name":"(anonymous_8)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":17},"end":{"line":88,"column":5}},"line":82},"9":{"name":"(anonymous_9)","decl":{"start":{"line":95,"column":4},"end":{"line":95,"column":5}},"loc":{"start":{"line":95,"column":32},"end":{"line":100,"column":5}},"line":95},"10":{"name":"(anonymous_10)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":14},"end":{"line":111,"column":5}},"line":105},"11":{"name":"(anonymous_11)","decl":{"start":{"line":116,"column":4},"end":{"line":116,"column":5}},"loc":{"start":{"line":116,"column":21},"end":{"line":120,"column":5}},"line":116}},"branchMap":{"0":{"loc":{"start":{"line":63,"column":12},"end":{"line":66,"column":13}},"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":66,"column":13}},{"start":{"line":63,"column":12},"end":{"line":66,"column":13}}],"line":63}},"s":{"0":1,"1":1,"2":84,"3":84,"4":102,"5":0,"6":0,"7":104,"8":6,"9":6,"10":6,"11":8,"12":6,"13":8,"14":8,"15":8,"16":22,"17":8,"18":8,"19":8,"20":18,"21":18,"22":52,"23":8,"24":8,"25":8,"26":8,"27":8,"28":38,"29":10,"30":10,"31":8,"32":8,"33":6,"34":6,"35":6,"36":27,"37":6,"38":8,"39":8,"40":22,"41":8,"42":8,"43":8,"44":8,"45":8,"46":22,"47":8,"48":4,"49":4,"50":4,"51":1},"f":{"0":84,"1":102,"2":0,"3":104,"4":6,"5":8,"6":8,"7":8,"8":6,"9":8,"10":8,"11":4},"b":{"0":[10,28]},"inputSourceMap":{"version":3,"file":"/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-2/lista.ts","sources":["/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-2/lista.ts"],"names":[],"mappings":"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","sourcesContent":["export class Lista<T> {\n  private _lista: T[];\n  private _tamaño: number;\n\n  /**\n   * Constructor de la clase generica Lista\n   * @param lista Lista de elementos a contener\n   */\n  constructor(lista: T[]) {\n    this._lista = lista;\n    this._tamaño = lista.length; // Hacemos uso de length, ya que anque hagamos un bucle while not undefined, podria contener un undefined.\n  }\n\n  /** Getter del atributo lista */\n  get lista() {\n    return this._lista;\n  }\n  /** Setter del atributo lista, que obtiene tambien el tamaño */\n  set lista(lista: T[]) {\n    this._lista = lista;\n    this._tamaño = lista.length;\n  }\n\n  /** Getter del tamaño */\n  get tamaño() {\n    return this._tamaño;\n  }\n\n  /**\n   * Este método añadira al final de la lista que lo llame, una segunda lista que se pasa por parametro\n   * @param segundaLista Segunda lista a añadir a la primera\n   */\n  append(segundaLista: Lista<T>) {\n    for (let i = this.tamaño, j = 0; j < segundaLista.tamaño; i++, j++) {\n      this.lista[i] = segundaLista.lista[j];\n    }\n\n    this._tamaño += segundaLista.tamaño;\n  }\n\n  /**\n   * Método que concatena la lista con la que el método es llamada + un número variable de listas por parametro\n   * @param lists Lista de listas variables\n   * @returns una lista con todas las listas unidas\n   */\n  concatenate(...lists: Lista<T>[]) {\n    let conjListas: T[] = [];\n    for (let i = 0; i < this._tamaño; i++) {\n      conjListas[i] = this._lista[i];\n    }\n\n    for (let i = 0, k = this._tamaño; i < lists.length; i++) {\n      for (let j = 0; j < lists[i].tamaño; j++, k++) {\n        conjListas[k] = lists[i].lista[j];\n      }\n    }\n\n    return new Lista<T>(conjListas);\n  }\n\n  /**\n   * Método que a partir de una lista y un predicado logico, si se cumple el predicado se añade a una nueva lista\n   * @param predicado Predicado logico\n   * @returns una nueva lista con los elementos que cumplen el predicado logico\n   */\n  filter(predicado: (elemento: T) => boolean) {\n    let nuevaLista: T[] = [];\n\n    for (let i = 0, k = 0; i < this._tamaño; i++) {\n      if (predicado(this._lista[i])) {\n        nuevaLista[k] = this._lista[i];\n        k++;\n      }\n    } \n\n    return new Lista<T>(nuevaLista);\n  }\n\n  /**\n   * Método que devuelve el número de elementos de la lista\n   * @returns el número de elementos de la lista\n   */\n  length() {\n    return this._tamaño;\n  }\n\n  /**\n   * Método que modifica una lista según una función recibida por parametro\n   * @param funcion Función modificadora\n   * @returns una nueva lista modificada\n   */\n  map(funcion: (elemento: T) => T) {\n    let nuevaLista: T[] = [];\n\n    for (let i = 0; i < this._tamaño; i++) {\n      nuevaLista[i] = funcion(this._lista[i]);\n    } \n\n    return new Lista<T>(nuevaLista);\n  }\n\n  /**\n   * Método que reduce cada elemento de la lista al acumalador utilizando la función\n   * @param acumulador Acumulador inicial\n   * @param funcion Funcion reductora\n   * @returns el valor del acumulador al final de todas las iteraciones\n   */\n  reduce(acumulador: T, funcion: (acumulador: T, elemento: T) => T) {\n    for (let i = 0; i < this._tamaño; i++) {\n      acumulador = funcion(acumulador, this._lista[i]);\n    } \n\n    return acumulador;\n  }\n\n  /**\n   * Método que retorna una lista con los elementos originales en orden inverso\n   * @returns una nueva lista con los elementos de la que la invoca al reves\n   */\n  reverse() {\n    let nuevaLista: T[] = [];\n\n    for (let i = this.tamaño - 1, k = 0; i >= 0; i--, k++) {\n      nuevaLista[k] = this._lista[i];\n    } \n\n    return new Lista<T>(nuevaLista);\n  }\n\n  /**\n   * Método que permite iterar entre los elementos de la lista y realizar la función pasada por parametro a cada elemento\n   * @param funcion Función que aplicar a los elementos\n   */\n  forEach(funcion: (elemento: T, index: number) => void) {\n    for (let i = 0; i < this._tamaño; i++) {\n      funcion(this._lista[i], i);\n    } \n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1b16294beb0915133c9f17ce730a38a02dfe8dc3","contentHash":"80a19ce8796bdfca4c84e50f134fc3d68ff53601311b807ab7e6e3d1ecf2dc1e"},"/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-MOD/numericSearchableCollection.ts":{"path":"/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-MOD/numericSearchableCollection.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"2":{"start":{"line":4,"column":31},"end":{"line":4,"column":64}},"3":{"start":{"line":11,"column":8},"end":{"line":11,"column":26}},"4":{"start":{"line":19,"column":28},"end":{"line":19,"column":30}},"5":{"start":{"line":20,"column":8},"end":{"line":24,"column":11}},"6":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"7":{"start":{"line":22,"column":16},"end":{"line":22,"column":41}},"8":{"start":{"line":25,"column":8},"end":{"line":25,"column":29}},"9":{"start":{"line":28,"column":0},"end":{"line":28,"column":66}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":28},"end":{"line":12,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":17},"end":{"line":26,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":32},"end":{"line":20,"column":33}},"loc":{"start":{"line":20,"column":46},"end":{"line":24,"column":9}},"line":20}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},"type":"if","locations":[{"start":{"line":21,"column":12},"end":{"line":23,"column":13}},{"start":{"line":21,"column":12},"end":{"line":23,"column":13}}],"line":21}},"s":{"0":1,"1":1,"2":1,"3":8,"4":5,"5":5,"6":50,"7":6,"8":5,"9":1},"f":{"0":8,"1":5,"2":50},"b":{"0":[6,44]},"inputSourceMap":{"version":3,"file":"/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-MOD/numericSearchableCollection.ts","sources":["/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-MOD/numericSearchableCollection.ts"],"names":[],"mappings":";;;AAAA,iEAA8D;AAE9D,MAAa,2BAA4B,SAAQ,2CAA4B;IAC3E;;;OAGG;IACH,YAAY,UAAoB;QAC9B,KAAK,CAAC,UAAU,CAAC,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,IAAY;QACjB,IAAI,aAAa,GAAa,EAAE,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,QAAgB,EAAE,EAAE;YAC3C,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACpB,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B;QACH,CAAC,CAAC,CAAA;QAEF,OAAO,aAAa,CAAC;IACvB,CAAC;CACF;AAxBD,kEAwBC","sourcesContent":["import { SearchableCollection } from \"./searchableCollection\";\n\nexport class NumericSearchableCollection extends SearchableCollection<number> {\n  /**\n   * Constructor de la clase NumericSearchableCollection\n   * @param collection Coleccion de elementos de tipo number\n   */\n  constructor(collection: number[]) {\n    super(collection);\n  }\n\n  /**\n   * Método que recibe un elemento de tipo <T> y busca si esta en la coleccion\n   * @param item Elemento de tipo generico <T>\n   * @returns un array de los elemntos encontrados\n   */\n  search(item: number): number[] {\n    let collectionAux: number[] = [];\n    this.collection.forEach((itemReal: number) => {\n      if (itemReal == item) {\n        collectionAux.push(item);\n      }\n    })\n\n    return collectionAux;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2124f8380cdb05fa4b0b611470dea619ae651464","contentHash":"d68b2a43dc17209e8aff23435856da5a1c362194a9167ad4d12154bdd4e47034"},"/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-MOD/searchableCollection.ts":{"path":"/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-MOD/searchableCollection.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":11,"column":8},"end":{"line":11,"column":38}},"3":{"start":{"line":15,"column":8},"end":{"line":15,"column":32}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":37}},"5":{"start":{"line":26,"column":8},"end":{"line":26,"column":36}},"6":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"7":{"start":{"line":35,"column":12},"end":{"line":35,"column":43}},"8":{"start":{"line":37,"column":8},"end":{"line":37,"column":25}},"9":{"start":{"line":45,"column":8},"end":{"line":55,"column":9}},"10":{"start":{"line":46,"column":32},"end":{"line":46,"column":34}},"11":{"start":{"line":47,"column":12},"end":{"line":51,"column":15}},"12":{"start":{"line":48,"column":16},"end":{"line":50,"column":17}},"13":{"start":{"line":49,"column":20},"end":{"line":49,"column":45}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":45}},"15":{"start":{"line":54,"column":12},"end":{"line":54,"column":43}},"16":{"start":{"line":56,"column":8},"end":{"line":56,"column":25}},"17":{"start":{"line":63,"column":8},"end":{"line":63,"column":39}},"18":{"start":{"line":66,"column":0},"end":{"line":66,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":28},"end":{"line":12,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":21},"end":{"line":16,"column":5}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":31},"end":{"line":20,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":18},"end":{"line":27,"column":5}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":19},"end":{"line":38,"column":5}},"line":33},"5":{"name":"(anonymous_5)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":22},"end":{"line":57,"column":5}},"line":44},"6":{"name":"(anonymous_6)","decl":{"start":{"line":47,"column":37},"end":{"line":47,"column":38}},"loc":{"start":{"line":47,"column":58},"end":{"line":51,"column":13}},"line":47},"7":{"name":"(anonymous_7)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":23},"end":{"line":64,"column":5}},"line":62}},"branchMap":{"0":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34},"1":{"loc":{"start":{"line":34,"column":12},"end":{"line":34,"column":57}},"type":"binary-expr","locations":[{"start":{"line":34,"column":12},"end":{"line":34,"column":22}},{"start":{"line":34,"column":26},"end":{"line":34,"column":57}}],"line":34},"2":{"loc":{"start":{"line":45,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":55,"column":9}},{"start":{"line":45,"column":8},"end":{"line":55,"column":9}}],"line":45},"3":{"loc":{"start":{"line":45,"column":12},"end":{"line":45,"column":57}},"type":"binary-expr","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":22}},{"start":{"line":45,"column":26},"end":{"line":45,"column":57}}],"line":45},"4":{"loc":{"start":{"line":48,"column":16},"end":{"line":50,"column":17}},"type":"if","locations":[{"start":{"line":48,"column":16},"end":{"line":50,"column":17}},{"start":{"line":48,"column":16},"end":{"line":50,"column":17}}],"line":48}},"s":{"0":1,"1":1,"2":16,"3":17,"4":0,"5":8,"6":12,"7":8,"8":4,"9":12,"10":8,"11":8,"12":61,"13":54,"14":8,"15":8,"16":4,"17":6,"18":1},"f":{"0":16,"1":17,"2":0,"3":8,"4":12,"5":12,"6":61,"7":6},"b":{"0":[8,4],"1":[12,10],"2":[8,4],"3":[12,10],"4":[54,7]},"inputSourceMap":{"version":3,"file":"/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-MOD/searchableCollection.ts","sources":["/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-MOD/searchableCollection.ts"],"names":[],"mappings":";;;AAGA,MAAsB,oBAAoB;IAChC,WAAW,CAAM;IAEzB;;;OAGG;IACH,YAAY,UAAe;QACzB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAChC,CAAC;IAED,qCAAqC;IACrC,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IACD,qCAAqC;IACrC,IAAI,UAAU,CAAC,UAAe;QAC5B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED;;;OAGG;IACH,OAAO,CAAC,IAAO;QACb,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED;;;;OAIG;IACH,OAAO,CAAC,KAAa;QACnB,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACjD,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAChC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;;OAIG;IACH,UAAU,CAAC,KAAa;QACtB,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YACjD,IAAI,aAAa,GAAQ,EAAE,CAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,IAAO,EAAE,SAAiB,EAAE,EAAE;gBACtD,IAAI,SAAS,GAAG,CAAC,IAAI,KAAK,EAAE;oBAC1B,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC1B;YACH,CAAC,CAAC,CAAA;YACF,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;YACjC,gCAAgC;YAChC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAChC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;OAGG;IACH,gBAAgB;QACd,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAA;IAChC,CAAC;CAQF;AA1ED,oDA0EC","sourcesContent":["import { Collectable } from \"./collectable\";\nimport { Searchable } from \"./searchable\";\n\nexport abstract class SearchableCollection<T> implements Collectable<T>, Searchable<T> {\n  private _collection: T[];\n\n  /**\n   * Constructor de la clase SearchableCollection\n   * @param collection Coleccion de elementos de tipo generico <T>\n   */\n  constructor(collection: T[]) {\n    this._collection = collection;\n  }\n\n  /** Getter del atributo collection */\n  get collection() {\n    return this._collection;\n  }\n  /** Setter del atributo collection */\n  set collection(collection: T[]) {\n    this.collection = collection;\n  }\n\n  /**\n   * Método para insertar un elemento a la coleccion\n   * @param item Elemento de tipo generico <T> a insertar\n   */\n  addItem(item: T): void {\n    this._collection.push(item);\n  }\n\n  /**\n   * Método para devolver un elemento de la coleccion\n   * @param index Índice del elemento a devolver\n   * @returns el elemento correspondiente al índice o undefined si el índice no existe en la coleccion\n   */\n  getItem(index: number): T | undefined{\n    if (index >= 0 && index < this._collection.length) {\n      return this._collection[index];\n    }\n    return undefined;\n  }\n\n  /**\n   * Método para eliminar un elemento de la coleccion\n   * @param index Índice del elemento a eliminar\n   * @returns el elemento correspondiente al índice o undefined si el índice no existe en la coleccion\n   */\n  removeItem(index: number): T | undefined{\n    if (index >= 0 && index < this._collection.length) {\n      let collectionAux: T[] = [];\n      this._collection.forEach((item: T, indexReal: number) => {\n        if (indexReal - 1 != index) {\n          collectionAux.push(item);\n        }\n      })\n      this._collection = collectionAux;\n      //this._collection.splice(index)\n      return this._collection[index];\n    }\n    return undefined;\n  }\n\n  /**\n   * Método que devuelve el número de elementos de la coleccion\n   * @returns el número de elementos de la coleccion\n   */\n  getNumberOfItems(): number {\n    return this._collection.length\n  }\n\n  /**\n   * Método que recibe un elemento de tipo <T> y busca si esta en la coleccion\n   * @param item Elemento de tipo generico <T>\n   * @returns un array de los elemntos encontrados\n   */\n  abstract search(item: T): T[];\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3ea36cd248c835a4df853801996db844d123dfcc","contentHash":"28064060d3e9a88d9d2396a57a79e3cb548affdd8a7d382bf252ecb1bc1f3a5a"},"/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-MOD/stringSearchableCollection.ts":{"path":"/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-MOD/stringSearchableCollection.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":7,"column":31},"end":{"line":7,"column":64}},"3":{"start":{"line":14,"column":8},"end":{"line":14,"column":26}},"4":{"start":{"line":22,"column":28},"end":{"line":22,"column":30}},"5":{"start":{"line":23,"column":8},"end":{"line":27,"column":11}},"6":{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":25,"column":41}},"8":{"start":{"line":28,"column":8},"end":{"line":28,"column":29}},"9":{"start":{"line":31,"column":0},"end":{"line":31,"column":64}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":28},"end":{"line":15,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":17},"end":{"line":29,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":32},"end":{"line":23,"column":33}},"loc":{"start":{"line":23,"column":46},"end":{"line":27,"column":9}},"line":23}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},{"start":{"line":24,"column":12},"end":{"line":26,"column":13}}],"line":24}},"s":{"0":1,"1":1,"2":1,"3":8,"4":4,"5":4,"6":36,"7":4,"8":4,"9":1},"f":{"0":8,"1":4,"2":36},"b":{"0":[4,32]},"inputSourceMap":{"version":3,"file":"/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-MOD/stringSearchableCollection.ts","sources":["/home/usuario/dsi-prct06-Genericas-Solid/src/ejercicio-MOD/stringSearchableCollection.ts"],"names":[],"mappings":";;;AAAA;;gHAEgH;AAChH,iEAA8D;AAE9D,MAAa,0BAA2B,SAAQ,2CAA4B;IAC1E;;;OAGG;IACH,YAAY,UAAoB;QAC9B,KAAK,CAAC,UAAU,CAAC,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,IAAY;QACjB,IAAI,aAAa,GAAa,EAAE,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,QAAgB,EAAE,EAAE;YAC3C,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACpB,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B;QACH,CAAC,CAAC,CAAA;QAEF,OAAO,aAAa,CAAC;IACvB,CAAC;CACF;AAxBD,gEAwBC","sourcesContent":["/*\nLa segunda deberá modelar una colección de cadenas de caracteres en la que el método search deberá poder \nbuscar una subcadena y devolverá un array con todas las cadenas de la colección que contengan dicha subcadena.*/\nimport { SearchableCollection } from \"./searchableCollection\";\n\nexport class StringSearchableCollection extends SearchableCollection<string> {\n  /**\n   * Constructor de la clase NumericSearchableCollection\n   * @param collection Coleccion de elementos de tipo string\n   */\n  constructor(collection: string[]) {\n    super(collection);\n  }\n\n  /**\n   * Método que recibe un elemento de tipo <T> y busca si esta en la coleccion\n   * @param item Elemento de tipo generico <T>\n   * @returns un array de los elemntos encontrados\n   */\n  search(item: string): string[] {\n    let collectionAux: string[] = [];\n    this.collection.forEach((itemReal: string) => {\n      if (itemReal == item) {\n        collectionAux.push(item);\n      }\n    })\n\n    return collectionAux;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7548fdad950169e98547a300d5aa3b2de2cc55e5","contentHash":"93f70ba217ecbcc8fd8cfd813fedc22d3c890d591778de517a82b1240a412436"}}